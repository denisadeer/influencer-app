const User = require("../models/User");

/**
 * Middleware: ovƒõ≈ô√≠, zda m√° u≈æivatel aktivn√≠ (placen√©‚ÄØ/‚ÄØmanu√°ln√≠) p≈ôedplatn√©.
 * Povol√≠ pl√°ny: basic, pro, manual.
 */
module.exports = async function checkSubscriptionStatus(req, res, next) {
  try {
    const userId = req.user.userId || req.user.id;
    const user   = await User.findById(userId);

    if (!user) {
      return res.status(404).json({ message: "U≈æivatel nenalezen." });
    }

    // üü¢ Pl√°ny, kter√© se poƒç√≠taj√≠ jako aktivn√≠
    const activePlans = ["basic", "pro", "manual"];

    // ‚ùå Pokud pl√°n nen√≠ mezi aktivn√≠mi¬†(= free nebo undefined)
    if (!activePlans.includes(user.subscriptionPlan)) {
      return res.status(403).json({ message: "Nem√°≈° aktivn√≠ p≈ôedplatn√©." });
    }

    // ‚ùå Pro placen√© pl√°ny basic / pro zkontroluj p≈ô√≠padn√© zru≈°en√≠
    if (
      user.subscriptionPlan !== "manual" &&               // manu√°l v≈ædy plat√≠
      user.subscriptionCancelAt &&
      new Date(user.subscriptionCancelAt) <= new Date()   // u≈æ po datu zru≈°en√≠
    ) {
      return res.status(403).json({ message: "Tv√© p≈ôedplatn√© ji≈æ vypr≈°elo." });
    }

    // ‚úÖ V≈°e v po≈ô√°dku
    next();
  } catch (err) {
    console.error("‚ùå Chyba v kontroln√≠m middleware:", err);
    res.status(500).json({ message: "Chyba serveru p≈ôi kontrole p≈ôedplatn√©ho." });
  }
};
